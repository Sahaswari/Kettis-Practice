#include <iostream>
#include <vector>
#include <map>
#include <string>
#include <algorithm>

using namespace std;

struct Friend {
    string name;
    int like;
    string birthday;

    Friend(string n, int l, string b) : name(n), like(l), birthday(b) {}
};

bool compareFriends(const Friend& a, const Friend& b) {
    if (a.birthday == b.birthday) {
        return a.like > b.like;
    }
    return a.birthday < b.birthday;
}

int main() {
    int N;
    cin >> N;

    vector<Friend> friends;
    map<string, bool> remembered;

    for (int i = 0; i < N; ++i) {
        string name, birthday;
        int like;
        cin >> name >> like >> birthday;
        friends.push_back(Friend(name, like, birthday));
    }

    sort(friends.begin(), friends.end(), compareFriends);

    vector<string> rememberedNames;

    for (int i = 0; i < N; ++i) {
        if (!remembered[friends[i].birthday]) {
            remembered[friends[i].birthday] = true;
            rememberedNames.push_back(friends[i].name);
        }
    }

    sort(rememberedNames.begin(), rememberedNames.end());

    cout << rememberedNames.size() << endl;
    for (const string& name : rememberedNames) {
        cout << name << endl;
    }

    return 0;
}

